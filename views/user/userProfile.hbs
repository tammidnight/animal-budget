{{> navbar response}}

<div class="profilePic"> 
<figure class="figure">
  <img src="{{user.animalUrl}}" class="figure-img img-fluid rounded" alt="The user's profile pic">
  <figcaption class="figure-caption">Looking good!</figcaption>
</figure>
</div>

<div class="profileHi">
<p>Hi {{user.username}}!<br>
It's good to see you again!
</p>
</div>

<div class="profileList">
<ul>
    <li>User: {{user.username}}</li>
    <li>User since: {{formattedDate}}</li>
    {{#if user.firstName}}
         <li>Full name: {{user.firstName}} {{user.lastName}}</li>
    {{/if}}
    <li>Email: {{user.email}}</li>
</ul>
</div>

<div class="containerProfile">
{{#if responseOne.walletName}}
  <div class="card">
  <canvas  id="myChartOne"></canvas>
    <div class="card-body">
      <p class="card-text">{{responseOne.walletName}}
        <br>
        {{#if responseOne.sharedUser}}
        <p>Shared Wallet with {{responseOne.sharedUser}}</p>
        {{/if}}
      </p>
      <form action="/{{responseOne._id}}" method="GET"><button>Go To</button></form>
    </div>
  </div>
  {{else}}
 <div class="card">
   <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-plus-circle card-img-top cardImg" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
</svg>
  <form action="/create" method="GET">
  <button class="create">Add new Wallet</button> </form>
</div>
{{/if}}

{{#if responseTwo.walletName}}
  <div class="card">
  <canvas  id="myChartTwo"></canvas>
    <div class="card-body">
      <p class="card-text">{{responseTwo.walletName}}
        <br>
        {{#if responseTwo.sharedUser}}
        <p>Shared Wallet with {{responseTwo.sharedUser}}</p>
        {{/if}}
      </p>
      <form action="/{{responseTwo._id}}" method="GET"><button>Go To</button></form>
    </div>
  </div>
  {{else}}
  <div class="card">
   <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-plus-circle card-img-top cardImg" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
</svg>
  <form action="/create" method="GET">
  <button class="create">Add new Wallet</button> </form>
</div>
{{/if}}

{{#if responseThree.walletName}}
 <div class="card">
  <canvas  id="myChartThree"></canvas>
    <div class="card-body">
      <p class="card-text">{{responseThree.walletName}}
        <br>
        {{#if responseThree.sharedUser}}
        <p>Shared Wallet with {{responseThree.sharedUser}}</p>
        {{/if}}
      </p>
      <form action="/{{responseThree._id}}" method="GET"><button>Go To</button></form>
    </div>
  </div>
{{else}}
 <div class="card">
   <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" fill="currentColor" class="bi bi-plus-circle card-img-top cardImg" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
</svg>
  <form action="/create" method="GET">
  <button class="create">Add new Wallet</button> </form>
</div>
{{/if}}

</div>

<script>
    const one = document.getElementById('myChartOne');
    const two = document.getElementById('myChartTwo');
    const three = document.getElementById('myChartThree');

    if (one){
      const ctxOne = one.getContext('2d');
      const myChartOne = new Chart(ctxOne, {
        type: 'bar',
        data: {
            labels: {{{chartLabels}}},
            datasets: [{
                label: 'Current status',
                data: {{{chartDataOne}}},
                fill: false,
                backgroundColor: [
                  '#99c0b2',
                  '#cc8996',
                ],
                  borderColor: [
                  '#00613e',
                  '#99122d',
                ],
                borderWidth: 1
            }]
        },
        options: {
          responsive: true,
          aspectRatio: 1,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
      });
    }

    if (two){
      const ctxTwo = two.getContext('2d');
      const myChartTwo = new Chart(ctxTwo, {
        type: 'bar',
        data: {
            labels: {{{chartLabels}}},
            datasets: [{
                label: 'Current status',
                data: {{{chartDataTwo}}},
                fill: false,
                backgroundColor: [
                  '#99c0b2',
                  '#cc8996',
                ],
                  borderColor: [
                  '#00613e',
                  '#99122d',
                ],
                borderWidth: 1
            }]
        },
        options: {
          responsive: true,
          aspectRatio: 1,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
      });
    }

    if (three){
      const ctxThree = three.getContext('2d');
      const myChartThree = new Chart(ctxThree, {
        type: 'bar',
        data: {
            labels: {{{chartLabels}}},
            datasets: [{
                label: 'Current status',
                data: {{{chartDataThree}}},
                fill: false,
                backgroundColor: [
                  '#99c0b2',
                  '#cc8996',
                ],
                  borderColor: [
                  '#00613e',
                  '#99122d',
                ],
                borderWidth: 1
            }]
        },
        options: {
          responsive: true,
          aspectRatio: 1,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
      });
    }
</script>